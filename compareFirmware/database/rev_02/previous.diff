diff --git a/firmwareExample/Makefile b/firmwareExample/Makefile
index 15a4673882..59f5cfab22 100644
--- a/firmwareExample/Makefile
+++ b/firmwareExample/Makefile
@@ -13,7 +13,7 @@ FEATURES_REQUIRED += periph_adc
 FEATURES_REQUIRED += periph_gpio_irq
 
 # acceleration sensor
-USEMODULE += lis2dh12_spi
+USEMODULE += lis3dh
 
 # gnrc_networking
 GNRC_NETIF_NUMOF := 1
diff --git a/firmwareExample/main.c b/firmwareExample/main.c
index d0f3433db5..329b8406e9 100644
--- a/firmwareExample/main.c
+++ b/firmwareExample/main.c
@@ -26,15 +26,16 @@
 #include "periph/adc.h"
 #include "board.h"
 
-/* LIS2DH12 */
-#define LIS2DH12_PARAM_SPI  SPI_DEV(2)
-#define LIS2DH12_PARAM_CS   GPIO_PIN(PB, 17)
-#include "lis2dh12.h"
-#include "lis2dh12_params.h"
-#include "lis2dh12_registers.h"
-/* allocate device descriptor */
-static lis2dh12_t dev;
+/* acceleration sensor */
+#include "lis3dh.h"
+/* define LIS3DH params */
+#define LIS3DH_PARAM_SPI  (SPI_DEV(1))
+#define LIS3DH_PARAM_CS   (GPIO_PIN(PA, 17))
+#define LIS3DH_PARAM_INT1 (GPIO_PIN(PB, 11))
+#define LIS3DH_PARAM_INT2 (GPIO_PIN(PB, 10))
+#include "lis3dh_params.h"
 
+static lis3dh_t dev;
 
 #define ENABLE_DEBUG 0
 #include "debug.h"
@@ -67,47 +68,34 @@ void button_int_cb(void* arg){
     puts("interrupt received.");
 }
 
-/* LIS2DH12 init function */
-void lis2dh12_test_init(void) {
-
-    if (IS_USED(MODULE_LIS2DH12_SPI)) {
-        puts("using SPI mode, for I2C mode select the lis2dh12_i2c module");
-    } else {
-        puts("using I2C mode, for SPI mode select the lis2dh12_spi module");
-    }
+/* LIS3DH init function */
+void lis3dh_func_init(void) {
 
     /* init lis */
-    if (lis2dh12_init(&dev, &lis2dh12_params[0]) == LIS2DH12_OK) {
-        puts("lis2dh12 [Initialized]");
+    if (lis3dh_init(&dev, &lis3dh_params[0]) == 0) {
+        puts("lis3dh [Initialized]");
     }
     else {
-        puts("lis2dh12 [Failed]");
+        puts("lis3dh [Failed]");
     }
 
-    /* change LIS settings */
-    lis2dh12_set_powermode(&dev, LIS2DH12_POWER_LOW);
-    lis2dh12_set_datarate(&dev, LIS2DH12_RATE_100HZ);
-    lis2dh12_set_scale(&dev, LIS2DH12_SCALE_2G);
-
-    /* configure FIFO */
-    lis2dh12_fifo_t fifo_cfg = {
-        .FIFO_mode = LIS2DH12_FIFO_MODE_STREAM,
-    };
+    lis3dh_set_odr(&dev, lis3dh_params[0].odr);
+    lis3dh_set_scale(&dev, lis3dh_params[0].scale);
+    lis3dh_set_axes(&dev, LIS3DH_AXES_XYZ);
 
-    lis2dh12_set_fifo(&dev, &fifo_cfg);
 }
 
 /* read LIS values */
-static int shell_is2dh12_read(int argc, char **argv)
+static int lis3dh_read(int argc, char **argv)
 {
     (void)argc;
     (void)argv;
 
-    int16_t data[3] = {0};
+    lis3dh_data_t data;
 
-    lis2dh12_read(&dev, data);
+    lis3dh_read_xyz(&dev, &data);
 
-    printf("X: %d  Y: %d  Z: %d\n", data[0], data[1], data[2]);
+    printf("X: %d  Y: %d  Z: %d\n", data.acc_x, data.acc_y, data.acc_z);
 
     return 0;
 }
@@ -116,7 +104,7 @@ static int shell_is2dh12_read(int argc, char **argv)
 static const shell_command_t shell_commands[] = {
     { "toggle_LED", "toggles the LED status of LED0", toggle_LED },
     { "adc", "reads the ADC0", read_ADC },
-    { "lis_read", "Read acceleration data", shell_is2dh12_read },
+    { "lis_read", "Read acceleration data", lis3dh_read },
     { NULL, NULL, NULL }
 };
 
@@ -141,7 +129,7 @@ int main(void)
     msg_init_queue(_main_msg_queue, MAIN_QUEUE_SIZE);
 
     /* init acceleration sensor */
-    lis2dh12_test_init();
+    lis3dh_func_init();
 
     /* start shell */
     puts("All up, running the shell now");
